<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./regex%20init_files/filelist.xml">
<title>Regular Expressions Application in the Messaging Workbench</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>VHAISARONTEP</o:Author>
  <o:LastAuthor>VHAISARONTEP</o:LastAuthor>
  <o:Revision>4</o:Revision>
  <o:TotalTime>258</o:TotalTime>
  <o:Created>2004-01-17T16:06:00Z</o:Created>
  <o:LastSaved>2004-01-17T16:27:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>1347</o:Words>
  <o:Characters>7679</o:Characters>
  <o:Company>VHA</o:Company>
  <o:Lines>63</o:Lines>
  <o:Paragraphs>15</o:Paragraphs>
  <o:CharactersWithSpaces>9430</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:553679495 -2147483648 8 0 66047 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:0pt;
	mso-ansi-language:EN;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	background:navy;
	font-size:12.0pt;
	font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoTitle>Regular Expressions Application in the Messaging Workbench</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The Messaging Workbench supports message element value
assessment using Pearl Compatible Regular Expressions (PCRE). The particular
PCRE engine incorporated in the MWB has been supplied under license by Ralf
Junker / The Delphi Inspiration (© Copyright 2000-2003 Ralf Junker / The Delphi
Inspiration, all rights reserved). The Delphi Inspiration Web Site is at <a
href="http://www.zeitungsjunge.de/delphi/">http://www.zeitungsjunge.de/delphi/</a>
.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>PCRE is a set of library functions that implement <span
lang=EN style='mso-ansi-language:EN'>regular expression pattern matching using
the same syntax and semantics as Perl&nbsp;5. To learn more about these
functions and the PCRE effort visit <a href="http://www.pcre.org/">http://www.pcre.org/</a>
. For documentation of the expression language visit <a
href="http://www.perldoc.com/perl5.8.0/pod/perlre.html">http://www.perldoc.com/perl5.8.0/pod/perlre.html</a>
. Another helpful resource in understanding and implementing PCRE is the book <b><u>Mastering
Regular Expressions</u></b> by<span style="mso-spacerun: yes">  </span>Jeffrey
E.F. Friedl published by O’Reilly ISBN 0-596-00289-0.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h1><span lang=EN>How PCREs are used in the MWB</span></h1>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>PCREs (a.k.a. <b>regex</b>)
can be used at various levels within the MWB, and for a couple of different
purposes. At the most basic level, a new field has been added to the profile
that permits entry of a PCRE expression, which can be used to ensure that any
example value enterred for the element is valid. A more important aspect of
PCRE usage in the MWB is their application in message instance validation
against a message profile. PCREs and message instance validation are being
introduced concurrently in release 6.2 of the MWB. The new message instance
validation feature is discussed elsewhere. The sections below explain how to
setup and use PCREs in the MWB.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><b><span lang=EN style='mso-ansi-language:EN'>Simple
Application:<o:p></o:p></span></b></p>

<p class=MsoNormal><b><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>To get a sense of
how PCREs can be used in the MWB, start a new profile, and simply compile the
single <b>MSH</b> segment. Select <b>MSH.1</b> – field separator in the Message
Tree. If the segment library that the <b>MSH</b> was compile against already
has PCREs assigned to its elements, then you’ll see a regex expression is
displayed in the Regex field (bottom right of Message Definition tab), that
looks something like this: <b>^[\x20-\x7e]{1,199}$. </b>This expression
represents an HL7 <b>ST</b> (string) data type, which is appropriate for <b>MSH.1</b>.
If on the other hand your segment library has not been prepared with integrated
regex, the field will be empty.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>In either event,
select the regex entry and delete it from the field. In the regex field enter
the following string: <b>^[|]$ </b>instead. Note that immediately after
entering the ‘<b>[</b>‘ character, the field background turns red (or whatever
color you have the highlight set to in the MWB options). As you enter the ‘<b>]</b>’
character the field background turns white again. The color change illustrates
the fact that the MWB evaluates the validity of the regex as you enter it.
Persistence of red in the field’s background color indicates that the regex
entered is illegal and needs to be corrected before it can be applied.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>The <b>^[|]$</b>
expression that we just entered is a constraint on the generic HL7 <b>ST</b>
data type regex. This paper will not delve into an explanation of PCRE syntax,
but suffice it to say that the first expression indicates that a valid <b>ST</b>
value will start at the beginning of a line, followed by up to 199 characters
in the range of space to ‘<b>~</b>’ (32-126), culminating with an end of line
character. The second expression contrains that statement indicating that a
valid <b>MSH.1</b> value can only consist of the ‘<b>|</b>’ character bracketted
by a start of line and end of line character. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>It’s time now to
test our regex. In the example value field enter a ‘<b>-</b>’ character. Notice
that the Example value field background turns red. The highlight indicates that
the example value is invalid. Erase the ‘<b>-</b>’ and replace with ‘<b>|</b>’.
Note that the highlight disapears indicating that the example value is
consistent with the regex that validates it. As a test, go to the Regex field,
and change the ‘|’ to a ‘<b>-</b>‘. Note that the Example value field becomes
highlighted again. These simple excercises illustrate that the Example value
and Regex fields are “wired together”. This feature ensures that an MWB user
can be confident of using legal regex and valid example values in a subject
profile. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><b><span lang=EN style='mso-ansi-language:EN'>Propagation of
PCREs within the MWB:<o:p></o:p></span></b></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>The excercises
above also allude to to other important features of the PCRE implementation
within the MWB. First, that libraries can be imbued with regex attributes.
Secondly, that element regex may be constrained at different levels. As
indicated above, segment libraries can have regex attributes assigned to
constituent elements, which will be automatically inherited by profile message
elements that employ such a regex prepared segment library. Regex assignment by
the way is directly applicable to elements with primitive data types only.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>In addition, data
type libraries can have regex assigned to primitive elements. Segment libraries
in turn can inherit the regex from their associated data type libraries. Also,
within data type libraries, compound data types can further constrain (or even
change ) the regex of their associated primitive data types. For example, if we
consider the <b>TS </b>– <b>time stamp</b> data type in HL7 version <b>2.4</b>
we see that it is composed of an <b>NM</b> component (<b>Date/Time</b>) and an <b>ST</b>
component (<b>degree of precision</b>).<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>The standard
specifies that the <b>Date/Time</b> component is to be implemented as a string
that looks like this:<o:p></o:p></span></p>

<p class=MsoNormal><b><span lang=EN style='mso-ansi-language:EN'>[YYYMMDD[HHHMM[SS[.SSSS]]][+-ZZZZ]<o:p></o:p></span></b></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>According to the
standard however the <b>NM</b> data type is to be implemented as:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><span
style="mso-spacerun: yes"> </span><b>[+/-]n[nnn---][.n[nnn---]]<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>which is
obviously inconsistent with the date/time string. After initially defining
regex for the data type library’s primitive elements, the 2 components of the <b>TS</b>
inherit the default regex for <b>NM</b> and <b>ST</b>, <b>^[+-]?\d*\.?\d*$</b>
and <b>^[\x20-\x7e]{1,199}$</b> respectively.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>The MWB however
permits constraining and/or changing the components regex to better suit the
parent data type’s implementation. In this case, the first component’s,<span
style="mso-spacerun: yes">  </span>regex is changed to:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'><span
style="mso-spacerun: yes"> </span><b>^\d{4}(((0[1-9])|(1[0-2]))?((([0-2][1-9])|(3[0-1]))?((([01]\d|2[0-3])([0-5]\d))?((([0-5]\d)?((\.\d{1,4})?))))))([+-](([0]\d|1[0-3])([0-5]\d)))?$
<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>which actually
matches the HL7 specified implementation. The second component is constrained
from the generic string regex as per the the specified HL7 implementation as: <b>^[YLDHMS]$</b>
. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>After these
changes, any more complex data type that includes a <b>TS</b> component will
inherit the specific <b>TS</b> components regex.<o:p></o:p></span></p>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<p class=MsoNormal>To summarize, the MWB supports hierarchical inheritance and
constraint of regex at the following levels:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><b>Primitive data type – Data type library<o:p></o:p></b></p>

<p class=MsoNormal><b><span style="mso-spacerun: yes">   </span>Compound data
type – Data Type library<o:p></o:p></b></p>

<p class=MsoNormal><b><span style="mso-spacerun: yes">       </span>Segment
fields – Segment library<o:p></o:p></b></p>

<h1><span style='mso-ansi-language:EN-US'><span style="mso-spacerun:
yes">           </span>Profile fields – Message Profile<o:p></o:p></span></h1>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h1><span style='mso-ansi-language:EN-US'>Regex Initialization in the MWB<o:p></o:p></span></h1>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The MWB has been engineered to facilitate the propagation of
regex within its libraries. Starting with Data Type maintenance (from the menu <b>Maint\Datatypes\Add/Edit
Data type File</b>). After selecting a data type file, select the last menu
item under the Data Type option - <b>Init Regex</b>. This feature will allow
you to select a text document that lists primitive data types together with
their regex. For this release the text document is named <b>Primitive DT
Regex.txt</b><span style="mso-spacerun: yes">  </span>and is supplied as the
default. After selection of the file, the primitive data types are propagated
throughout the data type library to both primitive and compound data types. It
is recommended that the data types be reviewed for the need to constrain/change
the complex data types appropriately as described above. Save the data type
file to make the regex propagation permanent.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>This method of propagation was devised to permit users to
provide their own regex and to facilitate easy extension of this feature to
later HL7 versions, and to existing customized data type libraries. Run this
option whenever it is desired to change one or more regex globally through out
the data type library. </p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>To inherit the regex into a segment library from an
associated data type library, use the <b>Maint\Libraries\Edit Library</b>
option. Select the segment library of interest. Be sure that it shows the
appropriate <b>Attached Data Type file</b> (or establish the attachment).
Determine whether or not the segment’s primitive fields should be changed or
not (initially they should be) and check/uncheck the <b>Regex/Examples for
Primitive fields</b> as desired, then click on the <b>DT Compile Only </b>button.
</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The check box determines whether or not a segment’s
primitive data types will take on the regex of the data type. If you have
already constrained the segment’s primitive fields regex, you may not want to
inherit the data type general regex.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>At the time of this writing, it is intended that regex will
be propagated throughout the standard libraries supplied with the MWB. Check to
be sure though. It is also possible to remove regex from a given data type
library and segment library. To do so, start with a particular data type
library, and select the file (supplied) named “Primitive DT Regex-nulls.txt”.
This will remove the regex from the data type library. Follow up by compiling
this data type library into the associated segment library(s) to scrub the
segment library of regex.</p>

</div>

</body>

</html>
