<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Explanations</title>
<base target="footer">
</head>

<body>

<p><font size="1" face="Verdana"><a name="muFile"></a><b>File menu -</b></font> <font size="1" face="Verdana">The<b>
File</b> menu provides the basic functionality to define <b><a href="#NewMsg">New</a></b> messages, <b><a href="#DirStruct">Open,
Save, Save As</a></b> and <b>Close</b> existing message files.</font></p>

<p><font size="1" face="Verdana"><b>Other Features on this menu:</b></font></p>
<p><font size="1" face="Verdana">Each time a message specification is opened, a
backup copy is automatically created. The <b>Restore Backup</b> action allows
the user to go back to resort to the backup copy.</font></p>
<p><font size="1" face="Verdana"><b>Save Compact </b>allows the specification to
be saved in a special compacted format. This compacted format is used for
example in the standard application package to distribute the HL7 standard
specifications for each message. Unlike the standard format documents which are
stand alone, compact format documents rely on the availability of uniquely
identified library files for reconstitution. This format is typically used only
for distributing a large corpus of specification documents.</font></p>
<p><font size="1" face="Verdana"><b>Capture External Message </b>activates the
Message Capture page directly. Message Capture is discussed elsewhere.</font></p>
<p><font size="1" face="Verdana"><b>Clear MRU </b>list clears the list of
recently opened message specifications at the end of the File menu.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="muMaint"></a><b>Maintenance Menu</b> -
There are 4 main activities associated: <b>Library Maintenance,&nbsp;</b> <b>Options
Selection, Data type Maintenance</b>,<br>
and <b>HL7 Table Maintenance</b>.</font></p>
<p><font size="1" face="Verdana">The libraries activities allow the ability to
create <b>New Libraries</b> from existing specifications,<b> Edit</b> existing
libraries, <b>Search</b> libraries for particular segments and <b>Select
Conformance Files</b> for the specification being defined.</font></p>
<p><font size="1" face="Verdana">The <b>Data Type maintenance</b> option allows
you to Create version specific data type files, and to add, edit or delete data
types.</font></p>
<p><font size="1" face="Verdana">The <b>Table Maintenance</b> feature allows you
to create new tables and to add/edit or delete table elements.</font></p>
<p><font size="1" face="Verdana">The<b> Options</b> activity allows the user to
set certain defaults for the application such as highlight color, library paths
etc.. An important feature of this option is the ability to define constants for
automatic inclusion on the Data Sources Data Tree. Another feature allows you to
define default style sheets for use with the various XML report types provided
by the application. Tabs have also been added for filtering the list of reports
available and for selecting attributes to be used in comparisons.</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="TreeDef"></a> This is the message
definition tree view</b> window. The segments and a segment group comprising the
Killdara ADT AO4 example message profile are depicted above. Expand the icons to reveal segment, field,
component and subcomponent elements in the hierarchical structure of each
element.&nbsp;</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="ElemParams"></a>The <b>Element
Parameters </b>area of the screen shows the parameters that define each of the
elements in the message definition tree. In this shot, note that the MSH segment
definition is displayed. As you click on elements within the tree, the Element
Parameters area will change to show the definition of the selected tree element.&nbsp;</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="SpecDef"></a>The <b>specification
definition area</b> of the screen is for adding/editing and viewing higher level
specification definition. When entering a new specification from scratch (i.e
not derived from an existing specification) the message structure field
determines which segment definitions will be pulled from the defined conformance
file libraries to create the new message. Select the level<br>
of conformance desired for the specification as well; choose from HL7 (standard
HL7 optionality specifiers), Conformance with Optionality, and Strict
Conformance (no optional elements allowed).</font><font size="1" face="Verdana">&nbsp;</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b>&nbsp;&nbsp;&nbsp;&nbsp; <a name="ToolsMU"></a>
The Tools menu</b> lists the following activities:</font></p>
<ul>
  <li><font size="1" face="Verdana"><b>Add Segment </b>- allows
    addition/insertion of a new segment into the message. If the entered segment
    is found in one of the conformance libraries attached to the specification,
    its fields will be added to the tree at the specified insertion point. If
    the named segment is not in the library, the segment will be added to the
    tree with one field - Set ID. The user can add other fields to the segment
    as required.</font>
  <li><font size="1" face="Verdana"><b>Add Field </b>- allows addition/insertion
    of a new field within a segment. The user specifies a data type for the
    field, and it is inserted into the tree at the user defined insertion point.
    All sub-elements for complex data types are automatically inserted.</font>
  <li><font size="1" face="Verdana"><b>Add Group</b> - allows enclosure of
    segments into segment groups.</font>
  <li><font size="1" face="Verdana"><b>Delete Element</b> - allows the deletion
    of segment groups (enclosure only or enclosure with segments), segments and
    fields.</font>
  <li><font size="1" face="Verdana"><b>Move Element Up/Down</b> allows
    re-positioning of segments and fields within the message.</font>
  <li><b><font size="1" face="Verdana">Expand/Collapse Message Tree</font></b>
  <li><font size="1" face="Verdana"><b>Unlink Data Node - </b>Unlinks the
    connection between a Data Tree element and a message tree element.</font>
  <li><b><font size="1" face="Verdana">Refresh Tree View</font></b><font size="1" face="Verdana">&nbsp;</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></li>
</ul>
<hr>
<p><font size="1" face="Verdana"><a name="Compile"></a><b>Compile</b> -
Assembles a new message specification based on the message structure entered
into the Message Structure edit box. The compile button is only active if the
message structure is entered manually. Compilation will also occur automatically
if the user presses the enter key after entering a new message structure.&nbsp;&nbsp;</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="ConfSel"></a>Conformance File Selection
</b>- Click the conformance file selection button to view, select and prioritize
the library files associated with the specification. Typically a specification
will have an associated HL7 library file of a particular version and perhaps a
locally defined library file that contains local applications of standard
segments, and any locally defined Z segments.&nbsp;&nbsp;</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="CompSpec"></a>Select Comparison
specification </b>- Allows selection of&nbsp; a specification to compare the
current specification definition against. Select auto-compare (recommended mode)
to see difference between the specifications highlighted automatically in the
specification definition area and the element parameters area. If auto-compare
is not turned on, differences will only be shown as you enter a particular
parameter field on the screen.</font><font size="1" face="Verdana">&nbsp;&nbsp;This
feature gives immediate feedback regarding the differences between
specifications. It complements one of the report options that displays all of
the difference in a single report.</font></p>
<p><font size="1" face="Verdana">This submenu also allows selection of the
specification reconciliation procedure. Reconciliation (<a href="Quick%20reconciliation.htm" target="_top">described
more fully elsewhere</a>) allow you to transfer attribute values from the
comparison specification to the object specification that you are currently
working on.<a href="blank_page.htm">&lt;back&gt;</a></font></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="ElementAdd"></a>Add Field, Add Seg,
Add SegGroup</b> - Each of these options operates similarly: after clicking one
of these icons, a floating dialog is shown that allows the user to enter
attributes for the respective element and to select a position within the
message definition tree for insertion of the new element.&nbsp;In the example
above,<b> zzField</b> will be added to the Message tree after the existing field
<b>Expected Discharge date</b>. Note that the insertion point field displayed on
the Add Field form corresponds to the Message Tree field selected.</font><a href="AppDescriptionPage.htm" target="_top"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="ElemDel"></a>Delete an element</b>
- Permits deletion of segments, segment groups or fields from the message tree.</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="TreeOps"></a>Tree Operations</b> -
These tools allow manipulation of node in the message tree: Move nodes up or
down; Expand or collapse tree; Refresh tree view.</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="FileManip"></a>File Manipulation</b>
- Click the appropriate icon to <b>create a new specification</b>, to <b>open
one</b>, or <b>save a one</b>.</font><a href="blank_page.htm"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="ODBC"></a> <b>ODBC Database selection</b>
- In this area you may select ODBC databases as sources for data linkage to the
individual message elements i the message tree. Data sets may be derived from
ODBC <b>tables</b>, <b>stored procedures</b> and/or <b>queries</b>. Once a
dataset is selected, it is added to the data definition tree to the right, and
its fields made available to be linked to message elements in the message
definition tree.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="Constants"></a> Constants</b> -
Constants of various types may be defined here for linkage to message elements.
As with ODBC data elements, constants are added to the data tree at the right
and may be selected for linkage. Any constant that is added to the data tree
will persist from one session to the next, provided that it is linked to a
message element. If it is not linked to a message element before the session is
concluded, it will be discarded. To maintain a list of constants that are
persistent from session to session without the need for a sponsoring message
tree element link, use the Maint/Options/Constants tab. This will allow you to
define constants that may be used from session to session and in a number of
different specifications.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="Datatree"></a> <b>Data Tree</b> - The
data tree view provides a way to see which data elements are available for
linking to message tree elements. This same view is re-iterated on a separate
floating form that conveniently facilitates the linkage between data and message
elements. The two data tree views are automatically kept in sync.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font face="Verdana" size="1"><a name="DataGrid"></a> <b>Data Grid</b> - The
data grid allows you to peruse the values of the fields in the currently
selected ODBC data source. A feature of data linkage that is apparent on the
main specification window, is that an example value is automatically entered in
the message element object at the time of linkage. This example value in turn
can be used later on the reports tab to generate an example message. The button
above the data grid on this page allow you to be more selective in the value
chosen for the example.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font face="Verdana" size="1"><a name="RepWin"></a> <b>Report Window</b> -
This is the main report window. For plain text and RTF style reports the window
also provides basic edit capabilities as indicated by the tool bar. For those
reports rendered in HTML or that use an <b> XSL stylesheet</b>, the editing feature is
not available. Reports may be printed and or saved to disk. <b> Note that the top
level menu is different on this page</b>. In particular, the File menu allows for
the selection of<b> style sheets (xsl)</b> to be applied to XML based reports as
well as the application of <b>Document Type Definition (dtd) </b>files to
example message reports. <b>The
application of style sheets however requires MS Internet Explorer 5.0 or higher.</b>
 The application of dtd files <b>requires a</b> <b>validating parser</b> like
the one in IE 5.0.&nbsp;</font></p>
<p><font size="1">The <b>print setup </b>option allows selection of verbose or
compact element names for the XML example message reports and DTD generation.
The verbose form references all message elements by their respective names,
whereas the compact form references element by their HL7 short hand identifiers
(e.g. PID.5.1, MSH.1 etc.).</font></p>
<p><font face="Verdana" size="1">The file menu
also provides the usual file handling options but specifically for report files
as opposed to message specification files.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="MsgTxt"></a> <b>Message Text Window</b>
- This is the window where an example <b>ER7 message</b> is captured by the
application. Most often it will just be cut from another document or text file
and pasted in, however you can click on the button above it to search for a
particular file containing the message text and have it inserted into the
window.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="ParseMsg"></a> <b>Parse Message</b> -
Click on this button to parse the message in the message text window. The result
of this operation is an instance of the message parse tree visible in the window
to the right, and the insertion of the abstract message structure string in the
Derived Message Structure box below.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="Consolidate"></a> <b>Consolidate
Segments</b> - Check this box if you prefer to have the abstract message
structure show repeating segment in the message within braces {}. Leave it
unchecked to have each instance of the segment re-iterated within the abstract
message structure. The box is checked by default, bu there may be some instances
where the repeat segments should be shown. This consideration is important for
deriving the full specification from the abstract message structure.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font face="Verdana" size="1"><b><a name="DeriveSpec"></a> Derive
Specification</b> - Click this button to produce a specification derived from
the example message and the abstract message structure shown in the Derived
Message Structure box. The result of this operation is a message specification
in the main window, which will automatically be displayed when the operation is
completed. Note that the field values from the captured message are
automatically entered as example values in the derived message specification.
Note also that when you return to the message capture window and move the mouse
over the items in the parse tree, that the corresponding message element names
will be displayed automatically just outside the right margin of the parse tree.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font face="Verdana" size="1"><b><a name="VuMsgCharacteristics"></a> View
Message Characteristics</b> - Click this button to view information about the
message gleaned from its field values. This is information derived chiefly from
the MSH segment of the message.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="DerivStruct"></a> <b>Derived Message
Structure</b> - This window displays the message structure derived from the
captured message. It will be used in the process of specification derivation. It
may be altered manually, but such alterations will be reflected in the derived
specification.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="ParseTree"></a> <b>Parse Tree</b> -
This window displays a graphic representation of the parsed message. The Segment
elements are labeled with the segment mnemonic in the message, and each lower
element is labeled with numeric path identifier indicating its hierarchical
position within the message. Element values if present are displayed at the
lowest level (repeated values are displayed as well).</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="UseCasePage"></a> Use Case
Parameters</b> - This as its title suggests allows the user to enter Use Case
information for the profile. It also displays the static derived from
information entered on the main page. After selecting the Application and Accept
Acknowledgement protocols, the static profile designator is also updated. The
acknowledgement mode automatically defaults to Original Mode if left unselected
by the user. </font><a href="AppDescriptionPage.htm" target="_top"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><b><a name="DataLink"></a> Data Link Page</b> -
This page facilitates linking the data elements from <b>ODBC databases</b> and <b>constants</b>
defined on the <b>Data Sources Tab</b> of the application. As mentioned
elsewhere, the Data Tree displayed on this page is a replica of the one on the
Data tab. Click the <a href="#DLink Button">Link button</a> to understand how
linkage between Message element and Data element is achieved.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="DLink Button"></a> <b>Link Button</b>
- To produce a link, the user highlights a message element in the <b>Message
tree</b> (<b>Encoding characters</b> in this depiction), selects the data node
in the data tree (also named <b>Encoding Characters</b> in the <b>Data Tree</b>),
and clicks the <b>Link button</b> (alternatively, the user may drag a value from
the data tree and drop it on the Data Link box in the message window).</font></p>
<p><font size="1" face="Verdana">Once the link is established, the data element
in the data tree is marked with a check, and in the message tree, the Data Link
box is valued with the name of the data element, end the example value box is
filled with the data value.</font><font size="1" face="Verdana"> The Data Link
Page may remain open as long as the user desires, so that linkages may be
performed interactively as need without having to bring up the linkage window
for each individual link.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font face="Verdana" size="1"><a name="UnLink"></a> <b>Un-Link Button</b> -
Use this button to disassociate&nbsp; a previously linked Message Element and
Data element.</font><font face="Verdana" size="1"> Select the element to be
unlinked in the<b> Data window</b>, then click the <b>Un-link button</b> to
process the disassociation. Keep in mind that a single <b>data element may be
linked to more than one message element</b>, so be sure to check the association
before performing the unlink.&nbsp;</font></p>
<p><font face="Verdana" size="1"><b>Alternatively</b>, select the element in the
Message Tree window (which is probably the better option where multiple links to
the same data element are present) and click the<b> Un-link button</b>.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="TblWin"></a> <b>Table Window</b> -
This window can be accessed in two different ways, and used to accomplish
different tasks. The mode of access depicted above is achieved by double
clicking on the table number value displayed in the <b>Table field of the
element parameters area </b>(<b>0104</b> in the example above). The window
displays a list of table elements for the selected table. Click on the <b>Select
button</b> to understand how a selected table element is processed by the
application.</font></p>
<p><font size="1" face="Verdana">The second mode of use is much simpler. By
clicking the <b>Table icon</b> on the tool bar in the <b>Main menu</b>, the
Table window is presented simply for looking up tables and table values. There
is no element selection or linking possible in this mode.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="TblIndex"></a> <b>Table Index</b> -
Click to replace the element display for a single table with an alphabetized
display of available tables. Double clicking on one of the table entries will
again replace the display with a listing of table elements and values for the
selected table.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1" face="Verdana"><a name="tblSel"></a> <b>Table Window Select
Button</b> - By selecting a table element and clicking the Select button (or by
double clicking the element) a process is initiated which <b>1.)</b> causes the
selected element to be added to the <b>Data Sources Data Tree view as a constant</b>;<b>
2.) </b>causes the constant value to be <b>automatically linked the the selected
Message tree element </b>( note the entry:<b> Release 2.2 Decemb... </b>in the
example screen above); <b>3.)</b> displays the table value in the <b>Example
Value</b> field of the selected message element (<b>2.2</b> in the example
screen above).</font></p>
<p><font size="1" face="Verdana">The Select button is not present if the Table
window is accessed via the Main menu tool bar Table button</font><font size="1" face="Verdana">.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p><font size="1"><b><a name="DirStruct"></a> MWB Directory Structure</b> - The
MWB application executable is stored in the application root directory that you
selected at installation. Typically this is <b>c:\program files\messaging
Workbench</b>. Aside from the application exacutable (<b>MsgWB.exe</b>) the
application parameters file <b>MWBProps.mwb </b>is stored. Under this directory
or folder are:</font></p>
<table border="0" width="100%">
  <tr>
    <td width="9%"><font size="1"><b>\LIB</b></font></td>
    <td width="31%"></td>
  </tr>
  <tr>
    <td width="9%"></td>
    <td width="31%">
      <ul>
        <li><font size="1"><b>.mcf </b>files - These are segment libraries for
          the various HL7 versions and for locally defined segments</font></li>
        <li><font size="1"><b>.mdf </b>files - These are datatype libraries, one
          for each supported HL7 version</font></li>
        <li><font size="1"><b>HL7TableStg.mwt</b> file is a library of HL7 and
          Custom tables</font></li>
      </ul>
      <p><font size="1">Also in this folder are subfolders for XSL style sheets
      to be applied to the various report types:</font></p>
      <p><font size="1"><b>XSL Spec </b>- Holds style sheets for Specification
      type reports</font></p>
      <p><font size="1"><b>XSL Msg </b>- Holds style sheets for Example Message
      style reports</font></p>
      <p><font size="1"><b>XSL Comp </b>- Holds style sheets for Specification
      Comparison style reports</font></td>
  </tr>
  <tr>
    <td width="9%"><font size="1"><b>\Projects</b></font></td>
    <td width="31%"><font size="1">This directory is intended to serve as a
      repository for messaging projects. It is recommended that a subfolder be
      created for each interface project, and that specifications, dtds and
      reports be stored in such a project specific folder.</font>
      <p><font size="1">As shipped, the project directory has one <b>subfolder</b>
      named <b>Examples,</b> which contains example message specifications. You
      are encouraged to open those examples in the Messaging Work Bench, and to
      save them to another folder in the Projects folder. Use these 'cloned'
      examples to try out the application features.</font></td>
  </tr>
  <tr>
    <td width="9%"><font size="1"><b>\Standards</b></font></td>
    <td width="31%"><font size="1">This folder <b>contains subfolders</b> for
      each of the supported HL7 standards. As of this writing, the product is
      shipped with a folder for versions <b>2.2</b> and <b>2.3.1</b>.&nbsp;</font>
      <p><font size="1">Within these subfolders are message specification files
      for standard HL7 messages. Ultimately the goal is to provide an example
      standard message for each unique HL7 message structure type.</font></p>
      <p><font size="1">You are encouraged to use these standard messages as
      starting points, or templates upon which to build your own messages. It
      would be wise, not to change these messages, but to make copies (by using
      the save as option) and saving the copies into particular Project files
      (as described above).</font></td>
  </tr>
  <tr>
    <td width="9%"><font size="1"><b>\HELP</b></font></td>
    <td width="31%"><font size="1">This folder contains the web files for this
      application help.</font></td>
  </tr>
  <tr>
    <td width="9%"></td>
    <td width="31%"><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></td>
  </tr>
</table>
<hr>
<p><font size="1"><b><a name="NewMsg"></a> New Message -</b> To create a new
message, simply select <b>New</b> from the <b>File menu</b>, then enter a
message structure into the <b>Structure field</b> on the specification
definition area of the <b>Message Definition tab </b>and press return (or click
on the compile button on the tools menu). When compilation is completed, the
message&nbsp; tree will reflect the structure that you entered. You may then
proceed to examine/change the parameters of each of the message elements and to
link data element to the message elements and/or to provide example values for
the elements. For example, you may enter <b>MSH,EVN,PID,PV1</b> into the
structure field then press return to invoke the compiler (in fact though the
application starts you off with the MSH already in the structure field for each
new message).</font></p>
<p><font size="1">Be sure that before you press return or hit the compile
button, that you have selected the appropriate <b>library (also called
conformance) file </b>for the message you want to create. When shipped, a
default conformance file is specified, so the first time you compile, the
resulting message should reflect the HL7 version entered as the default (usually
2.2). You may change this conformance file through the <b>Maint/Libraries/Select
Conformance File option </b>(described elsewhere).&nbsp; You may also define a <b>default
conformance file through the Maint/Options menu. </b>The default conformance
file is automatically used when you elect to create a new specification, unless
you have previously selected a particular conformance file. When you open an
existing specification, the conformance file that it was defined with is
automatically restored as the active conformance file.</font></p>
<p><font size="1">In the event that no conformance file is selected, or in the
case that a segment specified in the structure is not found in one or more of
the selected conformance files (as described elsewhere you may apply more than
one conformance file to a specification), any affected segments will be
represented in the message tree as a segment with a single <b>Set ID</b> field.
You may if you wish add other fields to this stub segment and/or change the
definition of the initial Set ID field. This in fact is the way that newly
created segments (particularly Z segments) are instantiated. If however you
intended to use standard segments and expected to see version specific segment
definitions in the tree, but only have segment stubs, then you must select the
appropriate conformance file(s), and recompile.</font><a href="blank_page.htm" target="footer"><font size="1" face="Verdana">&lt;back&gt;</font></a></p>
<hr>
<p>&nbsp;</p>

<p><font face="Verdana"><a name="ExVAl"></a><font size="1">This is the <b> example
value field.</b> Right click on this field to bring up a menu that lets you select a
data source for the Example value field. Choose from the ODBC/Constants Datat
Tree, HL7 Tables, or the Code System values. If a value is too large to be
displayed here, it will be flagged in red. Double click on the fields to bring
up a window that displays the entire value.<a href="blank_page.htm" target="footer">&lt;back&gt;</a></font></font></p>

<hr>
<p>&nbsp;</p>

<p><font face="Verdana"><a name="tblVal"></a><font size="1">The table field <b>documents the HL7 table</b> to be used for a particular field. Double click on the
field to bring up a window that allows selection of an example value from a
particular table. If a table number is displayed in the field when you double
click, that tables elements will be brought up for selection. If no table number
is displayed in the fields. a window will appear that allows you to select a
table and then an element from the table.<a href="blank_page.htm" target="footer">&lt;back&gt;</a></font></font></p>
<hr>
<p>&nbsp;</p>

<p><font face="Verdana"><a name="structwin"></a><font size="1">Click on the
Structure button to bring up an edit window to <b> enter multi-line message
structures</b>. This is especially useful for getting message structures from the
HL7 standard or from spreadsheets. Simply highlight the column(s) in the text
document or spreadsheet that containing the message segments, then paste it into
the window. The MWB will translate the vertical structure into a horizontal one.
Be sure not to copy columns that contain descriptive data. In the 2.2 and 2.3
specification it may be necessary to use Word's create table utility specifying
breaks on Tab in order to get the segments isolated from the descriptive text.<a href="blank_page.htm" target="footer">&lt;back&gt;</a></font></font></p>
<hr>
<p>&nbsp;</p>

<p>&nbsp;</p>
<p><font face="Verdana"><a name="ShowLib"></a><font size="1"><b>Displays currently
active Conformance library and Datatype library</b>.<a href="blank_page.htm" target="footer">&lt;back&gt;</a></font></font></p>
<hr>
<p>&nbsp;</p>

<p>&nbsp;</p>
<p><font face="Verdana"><a name="TblVu"></a><font size="1">Brings up a window
that <b> allows browsing of HL7 tables</b> and their values.<a href="blank_page.htm" target="footer">&lt;back&gt;</a></font></font></p>
<hr>
<p>&nbsp;</p>

<p><font face="Verdana"><a name="KillNotes"></a><font size="1">This button
invokes a <b> utility that removes all implementation notes and predicates</b> from a
specification. Its primary value is in preparing specifications for inclusion in
conformance libraries.<a href="blank_page.htm" target="footer">&lt;back&gt;</a></font></font></p>
<hr>
<p>&nbsp;</p>

<p><font face="Verdana"><a name="SpecType"></a><font size="1"><b>Three different
kinds of specification </b> are recognized and vary primarily in their degree of
optionality. The traditional HL7 specification as documented in the standard is
the default. The list of optionalities that may be applied to message elements
are consistent with those documented in the standard. The other 2 kinds of
specification are more stringent in regard to optionality, and each offers a
fewer choices for optionality than allowed by the standard. The main difference
between these last 2 kinds, is that one allows for elements to be classified as
optional, while the other does not. BE AWARE that by selecting either of the
conformance specification types will cause optionalities to changed
automatically in you active specification. Selecting one of these specification
types will also enable the Conformance Profile button, which opens up a form to
enter use case information for the profile.<a href="blank_page.htm" target="footer">&lt;back&gt;</a></font></font></p>
<hr>
<p>&nbsp;</p>

<p><font face="Verdana"><a name="predicate"></a><font size="1">The <b> predicate
window</b> only becomes active when an element is given an optionality of C
(conditional) or CE (conditional but empty) these optionalities are not
available with the HL7 Specification Type. The predicate describes the
conditions under which this element must be valued which is based on a
relationship of this element with another in the segment.<a href="blank_page.htm" target="footer">&lt;back&gt;</a></font></font></p>
<hr>
<p>&nbsp;</p>

<p><font face="Verdana"><a name="ImpNote"></a><font size="1"><b>Implementation
notes</b> may be added for any element to help clarify usage or intent.<a href="blank_page.htm" target="footer">&lt;back&gt;</a></font></font></p>
<hr>
<p>&nbsp;</p>

<p><font face="Verdana"><a name="FixVal"></a><font size="1">A value may be
marked as a <b> fixed value</b>, meaning that it will always take on a particular value
for the element in this profile. Fixed values are displayed as such in the
Profile report. Constants that are linked from the data tree to a message
element are automatically marked as fixed values.</font><a href="blank_page.htm" target="footer"><font size="1">&lt;back&gt;</font></a></font></p>
<hr>
<p>&nbsp;</p>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>

</body>

</html>
